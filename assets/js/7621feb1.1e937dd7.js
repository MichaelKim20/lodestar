"use strict";(self.webpackChunk_lodestar_docs=self.webpackChunk_lodestar_docs||[]).push([[2443],{206:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>a});var t=o(4848),s=o(8453);const i={},r="Debugging",c={id:"contribution/tools/debugging",title:"Debugging",description:"This page describes different approaches for debugging Lodestar.",source:"@site/pages/contribution/tools/debugging.md",sourceDirName:"contribution/tools",slug:"/contribution/tools/debugging",permalink:"/lodestar/contribution/tools/debugging",draft:!1,unlisted:!1,editUrl:"https://github.com/ChainSafe/lodestar/tree/unstable/docs/pages/contribution/tools/debugging.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CLI Reference",permalink:"/lodestar/contribution/dev-cli"},next:{title:"Flame Graphs",permalink:"/lodestar/contribution/tools/flamegraphs"}},d={},a=[{value:"VS Code launch config",id:"vs-code-launch-config",level:2},{value:"Attach to running process",id:"attach-to-running-process",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"debugging",children:"Debugging"}),"\n",(0,t.jsx)(n.p,{children:"This page describes different approaches for debugging Lodestar."}),"\n",(0,t.jsx)(n.h2,{id:"vs-code-launch-config",children:"VS Code launch config"}),"\n",(0,t.jsxs)(n.p,{children:["The simplest way to debug is to use the provided ",(0,t.jsx)(n.a,{href:"https://github.com/ChainSafe/lodestar/blob/unstable/.vscode/launch.template.json",children:"launch.template.json"})," ",(0,t.jsx)(n.code,{children:"configurations"}),". Copy them as ",(0,t.jsx)(n.code,{children:".vscode/launch.json"})," and they will be made available in the ",(0,t.jsx)(n.code,{children:"Run and Debug"})," section in VS Code. Adapt as needed, e.g. by adding additional arguments to the beacon ",(0,t.jsx)(n.a,{href:"https://github.com/ChainSafe/lodestar/blob/unstable/.vscode/launch.template.json#L22",children:"configuration"})," to match your needs."]}),"\n",(0,t.jsx)(n.p,{children:"VS Code supports debugging Workers out of the box when using those configurations."}),"\n",(0,t.jsx)(n.h2,{id:"attach-to-running-process",children:"Attach to running process"}),"\n",(0,t.jsxs)(n.p,{children:["Remote ",(0,t.jsx)(n.code,{children:"lodestar"})," processes can also be debugged by leveraging ",(0,t.jsxs)(n.a,{href:"https://nodejs.org/api/inspector.html",children:["node",":inspector"]}),". Adding ",(0,t.jsx)(n.code,{children:"--inspect"})," to the node CLI (e.g. ",(0,t.jsx)(n.code,{children:"NODE_OPTIONS=--inspect ./lodestar beacon"}),") allows to debug the main thread. To debug a specific ",(0,t.jsx)(n.code,{children:"Worker"}),", follow those steps:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["remove ",(0,t.jsx)(n.code,{children:"--inspect"})," from ",(0,t.jsx)(n.code,{children:"node"})," CLI"]}),"\n",(0,t.jsxs)(n.li,{children:["add following code to the ",(0,t.jsx)(n.code,{children:"worker"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'import inspector from "node:inspector";\ninspector.open();\ninspector.waitForDebugger();\n'})}),"\n",(0,t.jsx)(n.p,{children:"Use VS Code or Chrome devtools to debug those processes."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>c});var t=o(6540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);